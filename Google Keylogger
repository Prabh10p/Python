from scapy.all import *
import re
import optparse

def findGoogle(pkt):
    if pkt.haslayer(Raw) and pkt.haslayer(IP):
        payload = pkt.getlayer(Raw).load.decode(errors='ignore')  # Decode payload
        if "GET" in payload and "google" in payload:
            try:
                r = re.findall(r'[?&]q=([^&]*)', payload)
                if r:
                    search = r[0].replace('+', ' ').replace('%20', ' ')
                    print(f"[+] Searched for: {search}")
            except Exception as e:
                print(f"Error decoding payload: {e}")

def main():
    parser = optparse.OptionParser("Usage: %prog -i <interface>")
    parser.add_option("-i", dest="interface", type="string", help="Specify interface to listen on")

    (options, args) = parser.parse_args()
    if options.interface is None:
        print(parser.usage)
        exit(0)
    else:
        conf.iface = options.interface
        print(f'[*] Listening on interface: {options.interface}')

    try:
        print("[*] Starting Google sniffer.")
        sniff(filter='tcp port 80', prn=findGoogle, store=0)
    except KeyboardInterrupt:
        print("\n[*] Sniffer stopped.")

if __name__ == "__main__":
    main()
